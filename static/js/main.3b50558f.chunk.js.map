{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackButtons/FeedbackButtons.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/FeedbackButtons/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","styles","FeedbackOptions","options","onLeaveFeedback","map","btnName","name","onClick","btn","shortid","generate","Notification","message","notification","Statistics","good","neutral","bad","total","positiveFeedbacks","statistics","positive","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","evt","currentTarget","prevBad","prevNeutral","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,MAAQ,yB,oBCA1BD,EAAOC,QAAU,CAAC,IAAM,+B,oBCAxBD,EAAOC,QAAU,CAAC,aAAe,qC,yHCAjCD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,wBAAwB,MAAQ,0BAA0B,SAAW,+B,uVCE/M,SAASC,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvB,OACI,gCACI,oBAAIC,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,K,wCCHb,SAASG,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OACI,mCACKD,EAAQE,KAAI,SAACC,GAAD,OACT,wBAAiCC,KAAMD,EAASE,QAASJ,EAAiBJ,UAAWC,IAAOQ,IAA5F,SAAkGH,GAArFI,IAAQC,iB,sBCLrC,SAASC,EAAT,GAAqC,IAAZC,EAAW,EAAXA,QACrB,OACI,mBAAGb,UAAWC,IAAOa,aAArB,SAAoCD,I,qBCF5C,SAASE,EAAT,GAAwE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,kBAC9C,OACI,sBAAKpB,UAAWC,IAAOoB,WAAvB,UACI,oBAAGrB,UAAWC,IAAOe,KAArB,mBAAkCA,KAClC,oBAAGhB,UAAWC,IAAOgB,QAArB,sBAAwCA,KACxC,oBAAGjB,UAAWC,IAAOiB,IAArB,kBAAgCA,KAChC,oBAAGlB,UAAWC,IAAOkB,MAArB,oBAAoCA,KACpC,oBAAGnB,UAAWC,IAAOqB,SAArB,gCAAmDF,EAAnD,U,OCoDGG,MAtDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAmBMC,EAAqB,WACzB,OAAOZ,EAAOE,EAAMD,GAQdG,EAL+B,SAACD,GAEtC,OADAA,EAAQS,IACDC,KAAKC,MAAc,IAAPd,EAAcG,GAGPY,GACpBZ,EAAQS,IAEd,OACE,qCACE,cAAC/B,EAAD,CAASC,MAAM,wBAAf,SACE,cAACI,EAAD,CAAiBC,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBA/BrC,SAAC4B,GACxB,IAAM1B,EAAU0B,EAAIC,cAAc1B,KACnB,SAAZD,EAIY,YAAZA,EAIY,QAAZA,GACDqB,GAAO,SAAAO,GAAO,OAAIA,EAAU,KAJ5BR,GAAW,SAAAS,GAAW,OAAIA,EAAc,KAJxCV,GAAQ,SAAAS,GAAO,OAAIA,EAAU,UA+B3B,cAACrC,EAAD,CAASC,MAAM,aAAf,SACa,IAAVqB,EACD,cAACP,EAAD,CAAcC,QAAQ,sBACtB,cAACE,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,kBAAmBA,UC5ChBgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b50558f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__13gpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackButtons_btn__13w0P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__vMIOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2f3Gy\",\"good\":\"Statistics_good__1YhjV\",\"neutral\":\"Statistics_neutral__2_Pze\",\"bad\":\"Statistics_bad__3K-LJ\",\"total\":\"Statistics_total__rwMC9\",\"positive\":\"Statistics_positive__2_NTX\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nfunction Section ({ title, children }) {\r\n    return (\r\n        <div>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\nexport { Section };","import PropTypes from 'prop-types';\r\nimport shortid from 'short-id';\r\nimport styles from './FeedbackButtons.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n    return (\r\n        <>\r\n            {options.map((btnName) => (\r\n                <button key={shortid.generate()} name={btnName} onClick={onLeaveFeedback} className={styles.btn}>{btnName}</button>\r\n            ))}\r\n        </>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport { FeedbackOptions };","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nfunction Notification ({ message }) {\r\n    return (\r\n        <p className={styles.notification}>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n  };\r\n\r\nexport { Notification };","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css'\r\n\r\nfunction Statistics ({ good, neutral, bad, total, positiveFeedbacks }) {\r\n    return (\r\n        <div className={styles.statistics}>\r\n            <p className={styles.good}>Good: {good}</p>\r\n            <p className={styles.neutral}>Neutral: {neutral}</p>\r\n            <p className={styles.bad}>Bad: {bad}</p>\r\n            <p className={styles.total}>Total: {total}</p>\r\n            <p className={styles.positive}>Positive feedback: {positiveFeedbacks}%</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positiveFeedbacks: PropTypes.number.isRequired,\r\n  };\r\n\r\nexport { Statistics };","import React, { useState } from 'react';\n\nimport { Section } from './components/Section/Section';\nimport { FeedbackOptions } from './components/FeedbackButtons/FeedbackOptions';\nimport { Notification } from './components/Notification/Notification';\nimport { Statistics } from './components/Statistics/Statistics';\nimport './App.css';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0)\n\n\n  const btnCklickCounter = (evt) => {\n    const btnName = evt.currentTarget.name;\n    if(btnName === 'good') {\n      setGood(prevBad => prevBad + 1);\n      return;\n    }\n    if(btnName === 'neutral') {\n      setNeutral(prevNeutral => prevNeutral + 1);\n      return;\n    }\n    if(btnName === 'bad') {\n      setBad(prevBad => prevBad + 1);\n      return;\n    }\n  }\n\n  const countTotalFeedback = () => {\n    return good + bad + neutral;\n  }\n\n  const countPositiveFeedbackPercentage =(total) => {\n    total = countTotalFeedback();\n    return Math.round((good * 100) / total)\n  }\n\n    const positiveFeedbacks = countPositiveFeedbackPercentage();\n    const total = countTotalFeedback();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={['good', 'neutral', 'bad']} onLeaveFeedback={btnCklickCounter} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total === 0 ? \n          <Notification message=\"No feedback given\" /> : \n          <Statistics  \n            good={good} \n            neutral={neutral}\n            bad={bad}\n            total={total} \n            positiveFeedbacks={positiveFeedbacks} />}\n        </Section>\n      </>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}